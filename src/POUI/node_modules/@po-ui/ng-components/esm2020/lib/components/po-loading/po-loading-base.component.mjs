import { Input, Directive } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../services/po-language/po-language.service";
export const poLoadingLiteralsDefault = {
    en: {
        loading: 'Loading'
    },
    es: {
        loading: 'Cargando'
    },
    pt: {
        loading: 'Carregando'
    },
    ru: {
        loading: 'Загрузка'
    }
};
/**
 * @docsPrivate
 *
 * @description
 *
 * Este componente tem o objetivo de mostrar visualmente aos usuários que a aplicação está processando
 * ou aguardando a resposta de alguma requisição.
 */
export class PoLoadingBaseComponent {
    constructor(languageService) {
        this.languageService = languageService;
        this.text = this.getTextDefault();
    }
    /**
     * Texto a ser exibido no componente.
     */
    set text(value) {
        this._text = value || (value === '' ? '' : this.getTextDefault());
    }
    get text() {
        return this._text;
    }
    getTextDefault() {
        const language = this.languageService.getShortLanguage();
        return poLoadingLiteralsDefault[language].loading;
    }
}
PoLoadingBaseComponent.ɵfac = function PoLoadingBaseComponent_Factory(t) { return new (t || PoLoadingBaseComponent)(i0.ɵɵdirectiveInject(i1.PoLanguageService)); };
PoLoadingBaseComponent.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: PoLoadingBaseComponent, inputs: { text: ["p-text", "text"] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoLoadingBaseComponent, [{
        type: Directive
    }], function () { return [{ type: i1.PoLanguageService }]; }, { text: [{
            type: Input,
            args: ['p-text']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbG9hZGluZy1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1sb2FkaW5nL3BvLWxvYWRpbmctYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQUdqRCxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRztJQUN0QyxFQUFFLEVBQXFCO1FBQ3JCLE9BQU8sRUFBRSxTQUFTO0tBQ25CO0lBQ0QsRUFBRSxFQUFxQjtRQUNyQixPQUFPLEVBQUUsVUFBVTtLQUNwQjtJQUNELEVBQUUsRUFBcUI7UUFDckIsT0FBTyxFQUFFLFlBQVk7S0FDdEI7SUFDRCxFQUFFLEVBQXFCO1FBQ3JCLE9BQU8sRUFBRSxVQUFVO0tBQ3BCO0NBQ0YsQ0FBQztBQUVGOzs7Ozs7O0dBT0c7QUFFSCxNQUFNLE9BQU8sc0JBQXNCO0lBYWpDLFlBQW9CLGVBQWtDO1FBQWxDLG9CQUFlLEdBQWYsZUFBZSxDQUFtQjtRQUNwRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUNwQyxDQUFDO0lBWkQ7O09BRUc7SUFDSCxJQUFxQixJQUFJLENBQUMsS0FBYTtRQUNyQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssSUFBSSxDQUFDLEtBQUssS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUM7SUFDcEUsQ0FBQztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBS08sY0FBYztRQUNwQixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFFekQsT0FBTyx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsQ0FBQyxPQUFPLENBQUM7SUFDcEQsQ0FBQzs7NEZBckJVLHNCQUFzQjt5RUFBdEIsc0JBQXNCO3VGQUF0QixzQkFBc0I7Y0FEbEMsU0FBUztvRUFPYSxJQUFJO2tCQUF4QixLQUFLO21CQUFDLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCwgRGlyZWN0aXZlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb0xhbmd1YWdlU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL3BvLWxhbmd1YWdlL3BvLWxhbmd1YWdlLnNlcnZpY2UnO1xuaW1wb3J0IHsgUG9Mb2FkaW5nTGl0ZXJhbHMgfSBmcm9tICcuL2ludGVyZmFjZXMvcG8tbG9hZGluZy1saXRlcmFscy5pbnRlcmZhY2UnO1xuZXhwb3J0IGNvbnN0IHBvTG9hZGluZ0xpdGVyYWxzRGVmYXVsdCA9IHtcbiAgZW46IDxQb0xvYWRpbmdMaXRlcmFscz57XG4gICAgbG9hZGluZzogJ0xvYWRpbmcnXG4gIH0sXG4gIGVzOiA8UG9Mb2FkaW5nTGl0ZXJhbHM+e1xuICAgIGxvYWRpbmc6ICdDYXJnYW5kbydcbiAgfSxcbiAgcHQ6IDxQb0xvYWRpbmdMaXRlcmFscz57XG4gICAgbG9hZGluZzogJ0NhcnJlZ2FuZG8nXG4gIH0sXG4gIHJ1OiA8UG9Mb2FkaW5nTGl0ZXJhbHM+e1xuICAgIGxvYWRpbmc6ICfQl9Cw0LPRgNGD0LfQutCwJ1xuICB9XG59O1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIEVzdGUgY29tcG9uZW50ZSB0ZW0gbyBvYmpldGl2byBkZSBtb3N0cmFyIHZpc3VhbG1lbnRlIGFvcyB1c3XDoXJpb3MgcXVlIGEgYXBsaWNhw6fDo28gZXN0w6EgcHJvY2Vzc2FuZG9cbiAqIG91IGFndWFyZGFuZG8gYSByZXNwb3N0YSBkZSBhbGd1bWEgcmVxdWlzacOnw6NvLlxuICovXG5ARGlyZWN0aXZlKClcbmV4cG9ydCBjbGFzcyBQb0xvYWRpbmdCYXNlQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfdGV4dD86IHN0cmluZztcblxuICAvKipcbiAgICogVGV4dG8gYSBzZXIgZXhpYmlkbyBubyBjb21wb25lbnRlLlxuICAgKi9cbiAgQElucHV0KCdwLXRleHQnKSBzZXQgdGV4dCh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fdGV4dCA9IHZhbHVlIHx8ICh2YWx1ZSA9PT0gJycgPyAnJyA6IHRoaXMuZ2V0VGV4dERlZmF1bHQoKSk7XG4gIH1cblxuICBnZXQgdGV4dCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl90ZXh0O1xuICB9XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbGFuZ3VhZ2VTZXJ2aWNlOiBQb0xhbmd1YWdlU2VydmljZSkge1xuICAgIHRoaXMudGV4dCA9IHRoaXMuZ2V0VGV4dERlZmF1bHQoKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0VGV4dERlZmF1bHQoKTogc3RyaW5nIHtcbiAgICBjb25zdCBsYW5ndWFnZSA9IHRoaXMubGFuZ3VhZ2VTZXJ2aWNlLmdldFNob3J0TGFuZ3VhZ2UoKTtcblxuICAgIHJldHVybiBwb0xvYWRpbmdMaXRlcmFsc0RlZmF1bHRbbGFuZ3VhZ2VdLmxvYWRpbmc7XG4gIH1cbn1cbiJdfQ==