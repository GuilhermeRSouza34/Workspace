export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"po-dynamic-form-field.interface.js","sourceRoot":"","sources":["../../../../../../../projects/ui/src/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-field.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { TemplateRef } from '@angular/core';\nimport {\n  PoCheckboxGroupOption,\n  PoComboFilter,\n  PoComboLiterals,\n  PoDatepickerIsoFormat,\n  PoDatepickerRangeLiterals,\n  PoLookupFilter,\n  PoLookupLiterals,\n  PoMultiselectFilterMode,\n  PoMultiselectLiterals,\n  PoSwitchLabelPosition,\n  PoUploadLiterals,\n  PoUploadFileRestrictions\n} from '../../po-field';\nimport { PoLookupAdvancedFilter } from '../../po-field/po-lookup/interfaces/po-lookup-advanced-filter.interface';\nimport { PoLookupColumn } from '../../po-field/po-lookup/interfaces/po-lookup-column.interface';\nimport { PoMultiselectOption } from '../../po-field/po-multiselect/po-multiselect-option.interface';\nimport { PoSelectOption } from '../../po-field/po-select/po-select-option.interface';\nimport { ForceOptionComponentEnum } from '../po-dynamic-field-force-component.enum';\n\nimport { PoDynamicField } from '../po-dynamic-field.interface';\n\n/**\n * @usedBy PoDynamicFormComponent, PoAdvancedFilterComponent, PoPageDynamicSearchComponent\n *\n * @docsExtends PoDynamicField\n *\n * @description\n *\n * Interface para definição das propriedades dos campos de entrada que serão criados dinamicamente.\n */\nexport interface PoDynamicFormField extends PoDynamicField {\n  /**\n   * Define as colunas para utilização da busca avançada. Usada somente em conjunto com a propriedade `searchService`,\n   * essa propriedade deve receber um array de objetos que implementam a interface [`PoLookupColumn`](/documentation/po-lookup).\n   *\n   * > Caso sejam informadas colunas, deve-se obrigatoriamente conter colunas definidas como *label* e *value* para valores\n   * de tela e do model respectivamente.\n   *\n   * **Componentes compatíveis:** `po-radio-group`, `po-lookup`, `po-checkbox-group`.\n   */\n  columns?: Array<PoLookupColumn> | number;\n\n  /** Define a obrigatoriedade do campo. */\n  required?: boolean;\n\n  /**\n   * Define se a indicação de campo opcional será exibida.\n   *\n   * > A indicação não será exibida, se:\n   * - O campo for `required`, ou;\n   * - Não possuir `help` e `label`.\n   */\n  optional?: boolean;\n\n  /**\n   * Lista de opções que serão exibidos em um componente, podendo selecionar uma opção.\n   *\n   * **Componentes compatíveis:** `po-select`, `po-radio-group`, `po-checkbox-group`, `po-multiselect`.\n   * */\n  options?:\n    | Array<string>\n    | Array<PoSelectOption>\n    | Array<PoMultiselectOption>\n    | Array<PoCheckboxGroupOption>\n    | Array<any>;\n\n  /**\n   * Permite que o usuário faça múltipla seleção dentro da lista de opções.\n   */\n  optionsMulti?: boolean;\n\n  /**\n   *  Serviço que será utilizado para buscar os itens e preencher a lista de opções dinamicamente.\n   *  Pode ser informada uma URL ou uma instancia do serviço baseado em PoComboFilter.\n   *  **Importante**\n   *  > Para que funcione corretamente, é importante que o serviço siga o\n   *  [guia de API do PO UI](https://po-ui.io/guides/api).\n   */\n  optionsService?: string | PoComboFilter;\n\n  /**\n   * Serviço que será utilizado para realizar a busca avançada. Pode ser utilizado em conjunto com a propriedade `columns`.\n   * Pode ser ser informada uma URL ou uma instancia do serviço baseado em PoLookupFilter.\n   * **Importante:**\n   * > Caso utilizar a propriedade `optionsService` esta propriedade será ignorada.\n   * > Para que funcione corretamente, é importante que o serviço siga o\n   * [guia de API do PO UI](https://po-ui.io/guides/api).\n   */\n  searchService?: string | PoLookupFilter;\n\n  /**\n   * Máscara para o campo.\n   *\n   * **Componentes compatíveis:** `po-input`.\n   * > também é atribuído ao utilizar a propriedade `type: time`.\n   */\n  mask?: string;\n\n  /**\n   * Define que o valor do componente será conforme especificado na mascára. O valor padrão é `false`.\n   *\n   * **Componentes compatíveis:** `po-input`.\n   * > também é atribuído ao utilizar a propriedade `type: time`.\n   * */\n  maskFormatModel?: boolean;\n\n  /** Define o ícone que será exibido no início do campo.\n   * > Esta propriedade só pode ser utilizado nos campos:\n   * - Input;\n   * - Number;\n   * - Decimal;\n   * - Combo;\n   * - Password;\n   *\n   * > Veja a disponibilidade de ícones em [biblioteca de ícones](guides/icons).\n   */\n  icon?: string | TemplateRef<void>;\n\n  /**  Quantidade máxima de casas decimais.\n   *\n   * > Esta propriedade só pode ser utilizada quando o `type` for *currency*.\n   */\n  decimalsLength?: number;\n\n  /** Quantidade máxima de dígitos antes do separador decimal. O valor máximo permitido é 13\n   *\n   * > Esta propriedade só pode ser utilizada quando o `type` for *currency*.\n   */\n  thousandMaxlength?: number;\n\n  /**\n   * Regex para validação do campo.\n   *\n   * **Componentes compatíveis:** `po-input`, `po-password`.\n   * */\n  pattern?: string;\n\n  /**\n   * Tamanho mínimo de caracteres.\n   *\n   * **Componentes compatíveis:** `po-input`, `po-number`, `po-decimal`, `po-textarea`, `po-password`.\n   * */\n  minLength?: number;\n\n  /**\n   * Tamanho máximo de caracteres.\n   *\n   * **Componentes compatíveis:** `po-input`, `po-number`, `po-decimal`, `po-textarea`, `po-password`.\n   */\n  maxLength?: number;\n\n  /** Desabilita o campo caso informar o valor *true*. */\n  disabled?: boolean;\n\n  /** Texto de ajuda. */\n  help?: string;\n\n  /** Texto exibido quando o valor do componente for *true*. */\n  booleanTrue?: string;\n\n  /** Texto exibido quando o valor do componente for *false*. */\n  booleanFalse?: string;\n\n  /**\n   * Indica se o `model` receberá o valor formatado pelas propriedades `p-label-on` e `p-label-off` ou\n   * apenas o valor puro (sem formatação).\n   *\n   * O valor padrão é: `false`.\n   *\n   * > Esta propriedade está disponivel  apenas para o `swicth`.\n   */\n  formatModel?: boolean;\n\n  /**\n   * Valor máximo a ser informado no componente, podendo ser utilizado quando o tipo de dado por *number*, *date* ou *dateTime*.\n   *\n   * **Componentes compatíveis:** `po-datepicker`, `po-datepicker-range`, `po-number`, `po-decimal`\n   * */\n  maxValue?: string | number;\n\n  /**\n   * Valor mínimo a ser informado no componente, podendo ser utilizado quando o tipo de dado por *number*, *date* ou *dateTime*.\n   *\n   * **Componentes compatíveis:** `po-datepicker`, `po-datepicker-range`, `po-number`, `po-decimal`\n   */\n  minValue?: string | number;\n\n  /** Quantidade de linhas exibidas no `po-textarea`. */\n  rows?: number;\n\n  /** Esconde a informação estilo *password*, pode ser utilizado quando o tipo de dado for *string*. */\n  secret?: boolean;\n\n  /**\n   * Função ou serviço para validar as **mudanças do campo**.\n   *\n   * * A propriedade aceita os seguintes tipos:\n   * - **String**: Endpoint usado pelo componente para requisição via `POST`.\n   * - **Function**: Método que será executado.\n   *\n   * Ao ser executado, irá receber como parâmetro um objeto com o nome da propriedade\n   * alterada e o novo valor, conforme a interface `PoDynamicFormFieldChanged`:\n   *\n   * ``\n   * { property: 'property name', value: 'new value' }\n   * ``\n   *\n   * O retorno desta função deve ser do tipo [PoDynamicFormFieldValidation](documentation/po-dynamic-form#po-dynamic-form-field-validation),\n   * onde o usuário poderá determinar as novas propriedades do campo.\n   * Por exemplo:\n   *\n   * ``\n   * onChangeField(changeValue): PoDynamicFormFieldValidation {\n   *\n   * if (changeValue.property === 'birthday' && !this.validate('birthday')) {\n   *   return {\n   *     value: '',\n   *     field: { property: 'birthday', required: true },\n   *     focus: true\n   *   };\n   * }\n   * ``\n   *\n   * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\n   * ``\n   * { property: 'state', gridColumns: 6, validate: this.myFunction.bind(this) }\n   * ``\n   */\n  validate?: string | Function;\n\n  /**\n   * Objeto que será enviado como parâmetro nas requisições de busca usados pelos componentes `po-lookup` e\n   * `po-combo`.\n   *\n   * Por exemplo, para o parâmetro `{ age: 23 }` a URL da requisição ficaria:\n   *\n   * ``\n   * url + ?age=23&filter=Peter\n   * ``\n   */\n  params?: any;\n\n  /**\n   * Mensagem que será apresentada quando o campo ficar inválido.\n   *\n   * O campo fica inválido quando as seguintes propriedades não forem respeitadas:\n   *  - pattern;\n   *  - minValue;\n   *  - maxValue;\n   *\n   * > Esta mensagem não é apresentada quando o campo estiver vazio, mesmo que ele seja requerido.\n   *\n   * **Componentes compatíveis:** `po-datepicker`, `po-input`, `po-number`, `po-decimal`, `po-password`.\n   */\n  errorMessage?: string;\n\n  /**\n   * Formato de exibição no campo.\n   *\n   * Ao utilizar esta propriedade com o `type` *PoDynamicFieldType.Date* ou *PoDynamicFieldType.DateTime*,\n   * pode ser utilizada para formatação de exibição da data:\n   *\n   * Valores válidos:\n   *\n   * - dd/mm/yyyy\n   * - mm/dd/yyyy\n   * - yyyy/mm/dd\n   *\n   *\n   * Também pode-se utilizar em conjunto com `searchService`, informando uma lista de propriedades que será utilizado\n   * para formatação da exibição no campo, por exemplo: [\"id\", \"name\"].\n   */\n  format?: string | Array<string>;\n\n  /**\n   * Nome da propriedade do objeto retornado que será utilizado como descrição do campo.\n   *\n   * O valor padrão é: `label`.\n   *\n   * > Esta propriedade pode ser utilizada em conjunto com: `options`, `optionsService` e `searchService`.\n   */\n  fieldLabel?: string;\n\n  /**\n   * Nome da propriedade do objeto retornado que será utilizado como valor do campo.\n   *\n   * O valor padrão é: `value`.\n   *\n   * > Esta propriedade pode ser utilizada em conjunto com: `options`, `optionsService` e `searchService`.\n   */\n  fieldValue?: string;\n\n  /**\n   * Informa a ordem de exibição do campo.\n   *\n   * Exemplo de utilização:\n   *\n   * ``\n   * [\n   *   { property: 'test 1', order: 2 },\n   *   { property: 'test 2', order: 1 },\n   *   { property: 'test 3' },\n   *   { property: 'test 4', order: 3 }\n   * ];\n   * ``\n   *\n   * Na exibição a ordem ficará dessa forma:\n   * ``\n   * [\n   *   { property: 'test 2', order: 1 },\n   *   { property: 'test 1', order: 2 },\n   *   { property: 'test 4', order: 3 },\n   *   { property: 'test 3' }\n   * ];\n   * ``\n   *\n   * Só serão aceitos valores com números inteiros maiores do que zero.\n   *\n   * Campos sem `order` ou com valores negativos, zerados ou inválidos\n   * serão os últimos a serem renderizados e seguirão o posicionamento dentro do\n   * array.\n   */\n  order?: number;\n\n  /** Mensagem que será exibida enquanto o campo não estiver preenchido. */\n  placeholder?: string;\n\n  /**\n   * Define a localidade a ser utilizada no componente.\n   * Por padrão o valor será configurado segundo a o módulo [`I18n`](documentation/po-i18n)\n   *\n   * Exemplo de utilização:\n   * ``\n   * [\n   *   { property: 'birthday', locale: 'en', type: 'date' },\n   *   { property: 'wage', locale: 'ru', type: 'currency' }\n   * ];\n   * ``\n   *\n   * > Para ver quais linguagens suportadas acesse [`I18n`](documentation/po-i18n)\n   * > A propriedade será repassada para os componentes que suportam a mesma.\n   */\n  locale?: string;\n\n  /**\n   * O controle passa a permitir a entrada de um intervalo ao invés de um único valor.\n   *\n   * > Atualmente essa propriedade está disponível apenas para o tipo 'date' e 'dateTime'.\n   */\n  range?: boolean;\n\n  /** Indica que o campo será somente leitura.\n   *\n   * **Componentes compatíveis:** `po-datepicker`, `po-datepicker-range`, `po-input`, `po-number`, `po-decimal`, `po-select`, `po-textarea`, `po-password`\n   */\n  readonly?: boolean;\n\n  /**\n   * Permite a seleção de múltiplos itens.\n   *\n   * **Componente compatível:** `po-lookup`, `po-upload`\n   */\n  multiple?: boolean;\n\n  /** Se verdadeiro, o campo receberá um botão para ser limpo.\n   *\n   * **Componentes compatíveis:** `po-datepicker`, `po-datepicker-range`, `po-input`, `po-number`, `po-decimal`, `po-combo`, `po-lookup`, `po-password`\n   */\n  clean?: boolean;\n\n  /**\n   * Define a propriedade nativa `autocomplete` do campo como off.\n   *\n   * **Componentes compatíveis:** `po-datepicker`, `po-datepicker-range`, `po-input`, `po-number`, `po-decimal`, `po-lookup`, `po-password`\n   */\n  noAutocomplete?: boolean;\n\n  /**\n   * Posição de exibição do rótulo do PoSwitch.\n   * > Por padrão exibe à direita.\n   */\n  labelPosition?: PoSwitchLabelPosition;\n\n  /**\n   * Permite esconder a função de espiar a senha digitada no `po-password`.\n   */\n  hidePasswordPeek?: boolean;\n\n  /**\n   * Padrão de formatação para saída do model, independentemente do formato de entrada.\n   *\n   * > Veja os valores válidos no `enumPoDatepickerIsoFormat`.\n   *\n   * **Componente compatível:** po-datepicker\n   */\n  isoFormat?: PoDatepickerIsoFormat;\n\n  /**\n   * Objeto com as literais usadas para os seguintes componentes: `po-lookup`, `po-multiselect`, `po-combo` e `po-datepicker-range`.\n   *\n   * > O objeto padrão de literais será traduzido de acordo com o idioma do PoI18nService ou do browser.\n   *\n   * **Componentes compatíveis:** `po-lookup`, `po-multiselect`, `po-combo`, `po-datepicker-range`\n   */\n  literals?: PoLookupLiterals | PoMultiselectLiterals | PoComboLiterals | PoDatepickerRangeLiterals | PoUploadLiterals;\n\n  /**\n   * Se verdadeiro ativa a funcionalidade de scroll infinito para o combo ou lookup, ao chegar ao fim da tabela executará nova busca dos dados conforme paginação.\n   *\n   * **Componentes compatíveis:** `po-combo`, `po-lookup`.\n   */\n  infiniteScroll?: boolean;\n\n  /**\n   * Define o percentual necessário para disparar o evento show-more, que é responsável por carregar mais dados no combo. Caso o valor seja maior que 100 ou menor que 0, o valor padrão será 100%.\n   * **Exemplos**\n   * `{ infiniteScrollDistance: 80 }`: Quando atingir 80% do scroll do combo, o show-more será disparado.\n   *\n   * **Componente compatível:** `po-combo`.\n   */\n  infiniteScrollDistance?: number;\n\n  /**\n   * Define que a altura do componente será auto ajustável, possuindo uma altura minima porém a altura máxima será de acordo com o número de itens selecionados e a extensão dos mesmos, mantendo-os sempre visíveis.\n   *\n   * **Componentes compatíveis:** `po-multiselect`, `po-lookup`.\n   */\n  autoHeight?: boolean;\n\n  /**\n   * Intervalo utilizado no `po-number`.\n   */\n  step?: number;\n\n  /**\n   * Define o modo de pesquisa utilizado no filtro da lista de seleção: `startsWith`, `contains` ou `endsWith`.\n   * > Quando utilizar a propriedade p-filter-service esta propriedade será ignorada.\n   *\n   * **Componentes compatíveis:** `po-multiselect`.\n   */\n  filterMode?: PoMultiselectFilterMode;\n\n  /**\n   * Valor mínimo de caracteres para realizar o filtro no serviço do `po-combo`.\n   */\n  filterMinlength?: number;\n\n  /**\n   * Desabilita o filtro inicial no serviço do `po-combo`, que é executado no primeiro clique no campo.\n   */\n  disabledInitFilter?: boolean;\n\n  /**\n   * Se verdadeiro, desabilitará a busca de um item via TAB no `po-combo`.\n   */\n  disabledTabFilter?: boolean;\n\n  /**\n   * Esta propriedade define em quanto tempo (em milissegundos), aguarda para acionar o evento de filtro após cada pressionamento de tecla. Será utilizada apenas quando houver serviço (`p-filter-service`).\n   *\n   * **Componentes compatíveis:** `po-combo`, `po-multiselect`.\n   */\n  debounceTime?: number;\n\n  /**\n   * Indica que o evento `p-change` só será disparado ao clicar ou pressionar a tecla \"Enter\" sobre uma opção selecionada no `po-combo`.\n   */\n  changeOnEnter?: boolean;\n\n  /**\n   * Indica que a lista definida na propriedade p-options será ordenada pela descrição.\n   *\n   * **Componentes compatíveis:** `po-combo`, po-multiselect\n   */\n  sort?: boolean;\n\n  /**\n   * Placeholder do campo de pesquisa do `po-multiselect`.\n   *\n   * > Caso o mesmo não seja informado, o valor padrão será traduzido com base no idioma do navegador (pt, es e en).\n   */\n  placeholderSearch?: string;\n\n  /**\n   * Esconde o campo de pesquisa existente dentro do dropdown do `po-multiselect`.\n   */\n  hideSearch?: boolean;\n\n  /**\n   * Indica se o campo \"Selecionar todos\" do `po-multiselect` será escondido.\n   */\n  hideSelectAll?: boolean;\n\n  /**\n   * Lista de objetos dos campos que serão criados na busca avançada.\n   *\n   * > Caso não seja passado um objeto ou então ele esteja em branco o link de busca avançada ficará escondido.\n   *\n   * Exemplo de URL com busca avançada:\n   *\n   * `url + ?page=1&pageSize=20&name=Tony%20Stark&nickname=Homem%20de%20Ferro`\n   *\n   * Caso algum parâmetro seja uma lista, a concatenação é feita utilizando vírgula. Exemplo:\n   *\n   * `url + ?page=1&pageSize=20&name=Tony%20Stark,Peter%20Parker,Gohan`\n   */\n  advancedFilters?: Array<PoLookupAdvancedFilter>;\n  /**\n   * pode ser utilizada em conjunto com a propriedade `options` forçando o componente a renderizar um `po-select` ou `po-radio-group`.\n   *\n   * Valores aceitos:\n   * - ForceOptionComponentEnum.radioGroup\n   * - ForceOptionComponentEnum.select\n   *\n   * >Essa propriedade será ignorada caso seja utilizada em conjunto com a propriedade `optionsMulti` e `optionsService`.\n   */\n  forceOptionsComponentType?: ForceOptionComponentEnum;\n\n  /**\n   * Evento disparado ao fechar o popover do gerenciador de colunas após alterar as colunas visíveis.\n   *\n   * O componente envia como parâmetro um array de string com as colunas visíveis atualizadas.\n   * Por exemplo: [\"idCard\", \"name\", \"hireStatus\", \"age\"].\n   *\n   * **Componentes compatíveis**: `po-lookup`\n   */\n  changeVisibleColumns?: Function;\n\n  /**\n   * Evento disparado ao clicar no botão de restaurar padrão no gerenciador de colunas.\n   *\n   * O componente envia como parâmetro um array de string com as colunas configuradas inicialmente.\n   * Por exemplo: [\"idCard\", \"name\", \"hireStatus\", \"age\"].\n   *\n   * **Componentes compatíveis**: `po-lookup`\n   */\n  columnRestoreManager?: Function;\n\n  /**\n   * URL que deve ser feita a requisição com os arquivos selecionados.\n   *\n   * **Componente compatível**: `po-upload`\n   */\n  url?: string;\n\n  /**\n   * Define se o envio do arquivo será automático ao selecionar o mesmo.\n   *\n   * **Componente compatível**: `po-upload`\n   */\n  autoUpload?: boolean;\n\n  /**\n   * Permite a seleção de diretórios contendo um ou mais arquivos para envio.\n   *\n   * > A habilitação desta propriedade se restringe apenas à seleção de diretórios.\n   *\n   * > Definição não suportada pelo browser **Internet Explorer**, todavia será possível a seleção de arquivos padrão.\n   *\n   * **Componente compatível**: `po-upload`\n   */\n  directory?: boolean;\n\n  /**\n   * Exibe a área onde é possível arrastar e selecionar os arquivos. Quando estiver definida, omite o botão para seleção de arquivos\n   * automaticamente.\n   *\n   * > Recomendamos utilizar apenas um `po-upload` com esta funcionalidade por tela.\n   *\n   * **Componente compatível**: `po-upload`\n   */\n  dragDrop?: boolean;\n\n  /**\n   * Define em *pixels* a altura da área onde podem ser arrastados os arquivos. A altura mínima aceita é `160px`.\n   *\n   * > Esta propriedade funciona somente se a propriedade `p-drag-drop` estiver habilitada.\n   *\n   * **Componente compatível**: `po-upload`\n   */\n  dragDropHeight?: number;\n\n  /**\n   * Objeto que segue a definição da interface `PoUploadFileRestrictions`,\n   * que possibilita definir tamanho máximo/mínimo e extensão dos arquivos permitidos.\n   *\n   * **Componente compatível**: `po-upload`\n   */\n  restrictions?: PoUploadFileRestrictions;\n\n  /**\n   * Objeto que contém os cabeçalhos que será enviado na requisição dos arquivos.\n   *\n   * **Componente compatível**: `po-upload`\n   */\n  headers?: { [name: string]: string | Array<string> };\n\n  /**\n   * Oculta visualmente as informações de restrições para o upload.\n   *\n   * **Componente compatível**: `po-upload`\n   */\n  hideRestrictionsInfo?: boolean;\n\n  /**\n   * Omite o botão de seleção de arquivos.\n   *\n   * > Caso o valor definido seja `true`, caberá ao desenvolvedor a responsabilidade\n   * pela chamada do método `selectFiles()` para seleção de arquivos.\n   *\n   * **Componente compatível**: `po-upload`\n   */\n  hideSelectButton?: boolean;\n\n  /**\n   * Omite o botão de envio de arquivos.\n   *\n   * > Caso o valor definido seja `true`, caberá ao desenvolvedor a responsabilidade\n   * pela chamada do método `sendFiles()` para envio do(s) arquivo(s) selecionado(s).\n   *\n   * **Componente compatível**: `po-upload`\n   */\n  hideSendButton?: boolean;\n\n  /**\n   * Define se a indicação de campo obrigatório será exibida.\n   *\n   * > Não será exibida a indicação se:\n   * - Não possuir `p-help` e/ou `p-label`.\n   */\n  showRequired?: boolean;\n\n  /**\n   * Evento será disparado quando ocorrer algum erro no envio do arquivo.\n   * > Por parâmetro será passado o objeto do retorno que é do tipo `HttpErrorResponse`.\n   *\n   * **Componente compatível**: `po-upload`\n   */\n  onError?: Function;\n\n  /**\n   * Evento será disparado quando o envio do arquivo for realizado com sucesso.\n   * > Por parâmetro será passado o objeto do retorno que é do tipo `HttpResponse`.\n   *\n   * **Componente compatível**: `po-upload`\n   */\n  onSuccess?: Function;\n\n  /**\n   * Função que será executada no momento de realizar o envio do arquivo,\n   * onde será possível adicionar informações ao parâmetro que será enviado na requisição.\n   * É passado por parâmetro um objeto com o arquivo e a propriedade data nesta propriedade pode ser informado algum dado,\n   * que será enviado em conjunto com o arquivo na requisição, por exemplo:\n   *\n   * ```\n   *   event.data = {id: 'id do usuário'};\n   * ```\n   *\n   * **Componente compatível**: `po-upload`\n   */\n  onUpload?: Function;\n}\n"]}