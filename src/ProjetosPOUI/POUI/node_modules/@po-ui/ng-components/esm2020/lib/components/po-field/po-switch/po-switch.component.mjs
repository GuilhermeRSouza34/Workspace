import { __decorate } from "tslib";
import { ChangeDetectionStrategy, Component, forwardRef, Input, ViewChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { InputBoolean } from '../../../decorators';
import { uuid } from '../../../utils/util';
import { PoFieldModel } from '../po-field.model';
import { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';
import { PoSwitchLabelPosition } from './po-switch-label-position.enum';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../po-field-container/po-field-container-bottom/po-field-container-bottom.component";
import * as i3 from "../po-field-container/po-field-container.component";
import * as i4 from "../../po-icon/po-icon.component";
import * as i5 from "../../po-label/po-label.component";
const _c0 = ["switchContainer"];
function PoSwitchComponent_po_icon_7_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-icon", 10);
} }
/**
 * @docsExtends PoFieldModel
 *
 * @description
 *
 * O componente `po-switch` é um [checkbox](/documentation/po-checkbox-group) mais intuitivo, pois faz analogia a um interruptor.
 * Deve ser usado quando deseja-se transmitir a ideia de ligar / desligar uma funcionalidade específica.
 *
 * Pode-se ligar ou desligar o switch utilizando a tecla de espaço ou o clique do mouse.
 *
 * O texto exibido pode ser alterado de acordo com o valor setado aumentando as possibilidades de uso do componente,
 * portanto, recomenda-se informar textos que contextualizem seu uso para que facilite a compreensão do usuário.
 *
 * > O componente não altera o valor incial informado no *model*, portanto indica-se inicializa-lo caso ter necessidade.
 *
 * #### Boas práticas
 *
 * - Evite `labels` extensos que quebram o layout do `po-switch`, use `labels` diretos, curtos e intuitivos.
 *
 * #### Acessibilidade tratada no componente
 *
 * Algumas diretrizes de acessibilidade já são tratadas no componente, internamente, e não podem ser alteradas pelo proprietário do conteúdo. São elas:
 *
 * - Quando em foco, o switch é ativado usando a tecla de Espaço. [W3C WAI-ARIA 3.5 Switch - Keyboard Interaction](https://www.w3.org/WAI/ARIA/apg/patterns/switch/#keyboard-interaction-19)
 * - A área do foco precisar ter uma espessura de pelo menos 2 pixels CSS e o foco não pode ficar escondido por outros elementos da tela. [WCAG 2.4.12: Focus Appearance](https://www.w3.org/WAI/WCAG22/Understanding/focus-appearance-enhanced)
 *
 * @example
 *
 * <example name="po-switch-basic" title="PO Switch Basic">
 *   <file name="sample-po-switch-basic/sample-po-switch-basic.component.html"> </file>
 *   <file name="sample-po-switch-basic/sample-po-switch-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-switch-labs" title="PO Switch Labs">
 *   <file name="sample-po-switch-labs/sample-po-switch-labs.component.html"> </file>
 *   <file name="sample-po-switch-labs/sample-po-switch-labs.component.ts"> </file>
 *   <file name="sample-po-switch-labs/sample-po-switch-labs.component.e2e-spec.ts"> </file>
 *   <file name="sample-po-switch-labs/sample-po-switch-labs.component.po.ts"> </file>
 * </example>
 *
 * <example name="po-switch-order" title="PO Switch - Order Summary">
 *   <file name="sample-po-switch-order/sample-po-switch-order.component.html"> </file>
 *   <file name="sample-po-switch-order/sample-po-switch-order.component.ts"> </file>
 * </example>
 *
 * <example name="po-switch-order-reactive-form" title="PO Switch - Order Summary Reactive Form">
 *   <file name="sample-po-switch-order-reactive-form/sample-po-switch-order-reactive-form.component.html"> </file>
 *   <file name="sample-po-switch-order-reactive-form/sample-po-switch-order-reactive-form.component.ts"> </file>
 * </example>
 */
export class PoSwitchComponent extends PoFieldModel {
    constructor(changeDetector) {
        super();
        this.changeDetector = changeDetector;
        this.id = `po-switch[${uuid()}]`;
        this.value = false;
        this._labelOff = 'false';
        this._labelOn = 'true';
        this._labelPosition = PoSwitchLabelPosition.Right;
        this._formatModel = false;
    }
    /**
     * @optional
     *
     * @description
     *
     * Indica se o `model` receberá o valor formatado pelas propriedades `p-label-on` e `p-label-off` ou
     * apenas o valor puro (sem formatação).
     *
     * > Por padrão será atribuído `false`.
     * @default `false`
     */
    set formatModel(format) {
        this._formatModel = format || false;
    }
    get formatModel() {
        return this._formatModel;
    }
    /**
     * @optional
     *
     * @description
     *
     * Posição de exibição do rótulo que fica ao lado do switch.
     *
     * > Por padrão exibe à direita.
     */
    set labelPosition(position) {
        this._labelPosition = position in PoSwitchLabelPosition ? parseInt(position, 10) : PoSwitchLabelPosition.Right;
    }
    get labelPosition() {
        return this._labelPosition;
    }
    /**
     * Texto exibido quando o valor do componente for `false`.
     *
     * @default `false`
     */
    set labelOff(label) {
        this._labelOff = label || 'false';
    }
    get labelOff() {
        return this._labelOff;
    }
    /**
     * Texto exibido quando o valor do componente for `true`.
     *
     * @default `true`
     */
    set labelOn(label) {
        this._labelOn = label || 'true';
    }
    get labelOn() {
        return this._labelOn;
    }
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoSwitchComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoSwitchComponent, { static: true }) switch: PoSwitchComponent;
     *
     * focusSwitch() {
     *   this.switch.focus();
     * }
     * ```
     */
    focus() {
        if (!this.disabled) {
            this.switchContainer.nativeElement.focus();
        }
    }
    onBlur() {
        this.onTouched?.();
    }
    getLabelPosition() {
        switch (this.labelPosition) {
            case PoSwitchLabelPosition.Left:
                return 'left';
            case PoSwitchLabelPosition.Right:
                return 'right';
            default:
                return 'right';
        }
    }
    onKeyDown(event) {
        if (event.which === PoKeyCodeEnum.space || event.keyCode === PoKeyCodeEnum.space) {
            event.preventDefault();
            this.eventClick();
        }
    }
    changeValue(value) {
        if (this.value !== value) {
            this.value = value;
            if (this.formatModel) {
                if (this.value) {
                    this.updateModel(this.labelOn);
                }
                else {
                    this.updateModel(this.labelOff);
                }
            }
            else {
                this.updateModel(value);
            }
            this.emitChange(this.value);
        }
    }
    eventClick() {
        if (!this.disabled) {
            this.changeValue(!this.value);
        }
    }
    onWriteValue(value) {
        if (value !== this.value) {
            if (this.formatModel && !!value) {
                this.value = value.toLowerCase() === this.labelOn.toLowerCase();
            }
            else {
                this.value = !!value;
            }
            this.changeDetector.markForCheck();
        }
    }
}
PoSwitchComponent.ɵfac = function PoSwitchComponent_Factory(t) { return new (t || PoSwitchComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef)); };
PoSwitchComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoSwitchComponent, selectors: [["po-switch"]], viewQuery: function PoSwitchComponent_Query(rf, ctx) { if (rf & 1) {
        i0.ɵɵviewQuery(_c0, 7);
    } if (rf & 2) {
        let _t;
        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.switchContainer = _t.first);
    } }, inputs: { formatModel: ["p-format-model", "formatModel"], labelPosition: ["p-label-position", "labelPosition"], labelOff: ["p-label-off", "labelOff"], labelOn: ["p-label-on", "labelOn"] }, features: [i0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => PoSwitchComponent),
                multi: true
            }
        ]), i0.ɵɵInheritDefinitionFeature], decls: 10, vars: 15, consts: [[3, "p-disabled", "p-id", "p-label"], [1, "po-field-container-content"], [1, "po-switch"], ["role", "switch", 1, "po-switch-container", 3, "id", "tabindex", "blur", "click", "keydown"], ["switchContainer", ""], [1, "po-switch-track"], [1, "po-switch-toggle"], ["class", "po-switch-icon", "p-icon", "po-icon-ok", 4, "ngIf"], [3, "p-disabled", "p-label", "click"], [3, "p-help", "p-disabled"], ["p-icon", "po-icon-ok", 1, "po-switch-icon"]], template: function PoSwitchComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵelementStart(0, "po-field-container", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3, 4);
        i0.ɵɵlistener("blur", function PoSwitchComponent_Template_div_blur_3_listener() { return ctx.onBlur(); })("click", function PoSwitchComponent_Template_div_click_3_listener() { return ctx.eventClick(); })("keydown", function PoSwitchComponent_Template_div_keydown_3_listener($event) { return ctx.onKeyDown($event); });
        i0.ɵɵelementStart(5, "div", 5)(6, "div", 6);
        i0.ɵɵtemplate(7, PoSwitchComponent_po_icon_7_Template, 1, 0, "po-icon", 7);
        i0.ɵɵelementEnd()()();
        i0.ɵɵelementStart(8, "po-label", 8);
        i0.ɵɵlistener("click", function PoSwitchComponent_Template_po_label_click_8_listener() { return ctx.eventClick(); });
        i0.ɵɵelementEnd()()();
        i0.ɵɵelement(9, "po-field-container-bottom", 9);
        i0.ɵɵelementEnd();
    } if (rf & 2) {
        i0.ɵɵproperty("p-disabled", ctx.disabled)("p-id", ctx.id)("p-label", ctx.label);
        i0.ɵɵadvance(1);
        i0.ɵɵattribute("name", ctx.name);
        i0.ɵɵadvance(1);
        i0.ɵɵattribute("data-label-position", ctx.getLabelPosition());
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("id", ctx.id)("tabindex", ctx.disabled ? -1 : 0);
        i0.ɵɵattribute("aria-checked", ctx.value)("aria-disabled", ctx.disabled);
        i0.ɵɵadvance(3);
        i0.ɵɵattribute("aria-label", ctx.value === true ? ctx.labelOn : ctx.labelOff);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("ngIf", ctx.value === true);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("p-disabled", ctx.disabled)("p-label", ctx.value === true ? ctx.labelOn : ctx.labelOff);
        i0.ɵɵadvance(1);
        i0.ɵɵproperty("p-help", ctx.help)("p-disabled", ctx.disabled);
    } }, dependencies: [i1.NgIf, i2.PoFieldContainerBottomComponent, i3.PoFieldContainerComponent, i4.PoIconComponent, i5.PoLabelComponent], encapsulation: 2, changeDetection: 0 });
__decorate([
    InputBoolean()
], PoSwitchComponent.prototype, "formatModel", null);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoSwitchComponent, [{
        type: Component,
        args: [{ selector: 'po-switch', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => PoSwitchComponent),
                        multi: true
                    }
                ], template: "<po-field-container [p-disabled]=\"disabled\" [p-id]=\"id\" [p-label]=\"label\">\n  <div class=\"po-field-container-content\" [attr.name]=\"name\">\n    <div class=\"po-switch\" [attr.data-label-position]=\"getLabelPosition()\">\n      <div\n        #switchContainer\n        class=\"po-switch-container\"\n        role=\"switch\"\n        [attr.aria-checked]=\"value\"\n        [attr.aria-disabled]=\"disabled\"\n        [id]=\"id\"\n        [tabindex]=\"disabled ? -1 : 0\"\n        (blur)=\"onBlur()\"\n        (click)=\"eventClick()\"\n        (keydown)=\"onKeyDown($event)\"\n      >\n        <div class=\"po-switch-track\">\n          <div class=\"po-switch-toggle\" [attr.aria-label]=\"value === true ? labelOn : labelOff\">\n            <po-icon *ngIf=\"value === true\" class=\"po-switch-icon\" p-icon=\"po-icon-ok\"></po-icon>\n          </div>\n        </div>\n      </div>\n\n      <po-label [p-disabled]=\"disabled\" [p-label]=\"value === true ? labelOn : labelOff\" (click)=\"eventClick()\">\n      </po-label>\n    </div>\n  </div>\n\n  <po-field-container-bottom [p-help]=\"help\" [p-disabled]=\"disabled\"></po-field-container-bottom>\n</po-field-container>\n" }]
    }], function () { return [{ type: i0.ChangeDetectorRef }]; }, { switchContainer: [{
            type: ViewChild,
            args: ['switchContainer', { static: true }]
        }], formatModel: [{
            type: Input,
            args: ['p-format-model']
        }], labelPosition: [{
            type: Input,
            args: ['p-label-position']
        }], labelOff: [{
            type: Input,
            args: ['p-label-off']
        }], labelOn: [{
            type: Input,
            args: ['p-label-on']
        }] }); })();
//# sourceMappingURL=data:application/json;base64,