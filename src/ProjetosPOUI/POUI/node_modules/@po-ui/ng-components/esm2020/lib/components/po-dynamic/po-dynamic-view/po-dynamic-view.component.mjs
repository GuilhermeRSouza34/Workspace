import { Component } from '@angular/core';
import { PoDynamicViewBaseComponent } from './po-dynamic-view-base.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../../pipes/po-time/po-time.pipe";
import * as i3 from "./po-dynamic-view.service";
import * as i4 from "../../po-divider/po-divider.component";
import * as i5 from "../../po-info/po-info.component";
import * as i6 from "../../po-tag/po-tag.component";
import * as i7 from "../../po-image/po-image.component";
function PoDynamicViewComponent_div_0_ng_template_1_po_divider_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-divider", 8);
} if (rf & 2) {
    const field_r8 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("p-label", field_r8.divider);
} }
function PoDynamicViewComponent_div_0_ng_template_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementContainer(0);
} }
const _c0 = function (a0) { return { $implicit: a0 }; };
function PoDynamicViewComponent_div_0_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵtemplate(0, PoDynamicViewComponent_div_0_ng_template_1_po_divider_0_Template, 1, 1, "po-divider", 6);
    i0.ɵɵtemplate(1, PoDynamicViewComponent_div_0_ng_template_1_ng_container_1_Template, 1, 0, "ng-container", 7);
} if (rf & 2) {
    const field_r8 = ctx.$implicit;
    i0.ɵɵnextContext(2);
    const _r1 = i0.ɵɵreference(2);
    const _r3 = i0.ɵɵreference(4);
    const _r5 = i0.ɵɵreference(6);
    i0.ɵɵproperty("ngIf", field_r8 == null ? null : field_r8.divider == null ? null : field_r8.divider.trim());
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngTemplateOutlet", !field_r8.tag && !field_r8.image ? _r1 : !field_r8.image ? _r3 : _r5)("ngTemplateOutletContext", i0.ɵɵpureFunction1(3, _c0, field_r8));
} }
function PoDynamicViewComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "div", 4);
    i0.ɵɵtemplate(1, PoDynamicViewComponent_div_0_ng_template_1_Template, 2, 5, "ng-template", 5);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngForOf", ctx_r0.visibleFields);
} }
function PoDynamicViewComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-info", 9);
} if (rf & 2) {
    const field_r12 = ctx.$implicit;
    i0.ɵɵproperty("ngClass", field_r12.cssClass)("p-label", field_r12.label)("p-value", field_r12.value);
} }
function PoDynamicViewComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-tag", 10);
} if (rf & 2) {
    const field_r13 = ctx.$implicit;
    i0.ɵɵproperty("ngClass", field_r13.cssClass)("p-color", field_r13.color)("p-icon", field_r13.icon)("p-inverse", field_r13.inverse)("p-label", field_r13.label)("p-value", field_r13.value);
} }
function PoDynamicViewComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "po-image", 11);
} if (rf & 2) {
    const field_r14 = ctx.$implicit;
    i0.ɵɵproperty("p-alt", field_r14.alt)("p-height", field_r14.height)("p-src", field_r14.value);
} }
/**
 * @docsExtends PoDynamicViewBaseComponent
 *
 * @example
 *
 * <example name="po-dynamic-view-basic" title="PO Dynamic View Basic">
 *  <file name="sample-po-dynamic-view-basic/sample-po-dynamic-view-basic.component.html"> </file>
 *  <file name="sample-po-dynamic-view-basic/sample-po-dynamic-view-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-dynamic-view-employee" title="PO Dynamic View - Employee">
 *  <file name="sample-po-dynamic-view-employee/sample-po-dynamic-view-employee.component.html"> </file>
 *  <file name="sample-po-dynamic-view-employee/sample-po-dynamic-view-employee.component.ts"> </file>
 * </example>
 *
 * <example name="po-dynamic-view-employee-on-load" title="PO Dynamic View - Employee on load">
 *  <file name="sample-po-dynamic-view-employee-on-load/sample-po-dynamic-view-employee-on-load.component.html"> </file>
 *  <file name="sample-po-dynamic-view-employee-on-load/sample-po-dynamic-view-employee-on-load.component.ts"> </file>
 * </example>
 */
export class PoDynamicViewComponent extends PoDynamicViewBaseComponent {
    constructor(currencyPipe, datePipe, decimalPipe, timePipe, titleCasePipe, dynamicViewService) {
        super(currencyPipe, datePipe, decimalPipe, timePipe, titleCasePipe, dynamicViewService);
    }
    ngOnChanges(changes) {
        if (changes.fields || changes.value || changes.showAllValue) {
            this.visibleFields = this.getVisibleFields();
        }
    }
    ngOnInit() {
        if (this.load) {
            this.updateValuesAndFieldsOnLoad();
        }
    }
    async getValuesAndFieldsFromLoad() {
        let valueAndFieldsFromLoad;
        if (typeof this.load === 'string') {
            valueAndFieldsFromLoad = await this.dynamicViewService.onLoad(this.load, this.value);
        }
        else if (typeof this.load === 'function') {
            valueAndFieldsFromLoad = this.load();
        }
        return valueAndFieldsFromLoad || {};
    }
    getVisibleFields() {
        if (this.showAllValue) {
            return this.getMergedFields();
        }
        return this.value && this.fields.length ? this.getConfiguredFields() : this.getValueFields();
    }
    setFieldOnLoad(fieldOnLoad) {
        const index = this.fields.findIndex(field => field.property === fieldOnLoad.property);
        if (index >= 0) {
            this.fields[index] = { ...this.fields[index], ...fieldOnLoad };
        }
        else {
            this.fields.push({ ...fieldOnLoad });
        }
    }
    setFieldsOnLoad(fields) {
        if (fields) {
            fields.forEach(fieldOnLoad => {
                this.setFieldOnLoad(fieldOnLoad);
            });
        }
    }
    setValueOnLoad(newValue) {
        Object.assign(this.value, newValue);
    }
    async updateValuesAndFieldsOnLoad() {
        const { value, fields } = await this.getValuesAndFieldsFromLoad();
        this.setValueOnLoad(value);
        this.setFieldsOnLoad(fields);
        this.visibleFields = this.getVisibleFields();
    }
}
PoDynamicViewComponent.ɵfac = function PoDynamicViewComponent_Factory(t) { return new (t || PoDynamicViewComponent)(i0.ɵɵdirectiveInject(i1.CurrencyPipe), i0.ɵɵdirectiveInject(i1.DatePipe), i0.ɵɵdirectiveInject(i1.DecimalPipe), i0.ɵɵdirectiveInject(i2.PoTimePipe), i0.ɵɵdirectiveInject(i1.TitleCasePipe), i0.ɵɵdirectiveInject(i3.PoDynamicViewService)); };
PoDynamicViewComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: PoDynamicViewComponent, selectors: [["po-dynamic-view"]], features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 7, vars: 1, consts: [["class", "po-dynamic-view po-row", 4, "ngIf"], ["poInfo", ""], ["poTag", ""], ["poImage", ""], [1, "po-dynamic-view", "po-row"], ["ngFor", "", 3, "ngForOf"], ["class", "po-sm-12", 3, "p-label", 4, "ngIf"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "po-sm-12", 3, "p-label"], [3, "ngClass", "p-label", "p-value"], [3, "ngClass", "p-color", "p-icon", "p-inverse", "p-label", "p-value"], [3, "p-alt", "p-height", "p-src"]], template: function PoDynamicViewComponent_Template(rf, ctx) { if (rf & 1) {
        i0.ɵɵtemplate(0, PoDynamicViewComponent_div_0_Template, 2, 1, "div", 0);
        i0.ɵɵtemplate(1, PoDynamicViewComponent_ng_template_1_Template, 1, 3, "ng-template", null, 1, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtemplate(3, PoDynamicViewComponent_ng_template_3_Template, 1, 6, "ng-template", null, 2, i0.ɵɵtemplateRefExtractor);
        i0.ɵɵtemplate(5, PoDynamicViewComponent_ng_template_5_Template, 1, 3, "ng-template", null, 3, i0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        i0.ɵɵproperty("ngIf", ctx.visibleFields.length);
    } }, dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i4.PoDividerComponent, i5.PoInfoComponent, i6.PoTagComponent, i7.PoImageComponent], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PoDynamicViewComponent, [{
        type: Component,
        args: [{ selector: 'po-dynamic-view', template: "<div class=\"po-dynamic-view po-row\" *ngIf=\"visibleFields.length\">\n  <ng-template ngFor let-field [ngForOf]=\"visibleFields\">\n    <po-divider *ngIf=\"field?.divider?.trim()\" class=\"po-sm-12\" [p-label]=\"field.divider\"> </po-divider>\n\n    <ng-container\n      *ngTemplateOutlet=\"\n        !field.tag && !field.image ? poInfo : !field.image ? poTag : poImage;\n        context: { $implicit: field }\n      \"\n    >\n    </ng-container>\n  </ng-template>\n</div>\n\n<ng-template #poInfo let-field>\n  <po-info [ngClass]=\"field.cssClass\" [p-label]=\"field.label\" [p-value]=\"field.value\"> </po-info>\n</ng-template>\n\n<ng-template #poTag let-field>\n  <po-tag\n    [ngClass]=\"field.cssClass\"\n    [p-color]=\"field.color\"\n    [p-icon]=\"field.icon\"\n    [p-inverse]=\"field.inverse\"\n    [p-label]=\"field.label\"\n    [p-value]=\"field.value\"\n  >\n  </po-tag>\n</ng-template>\n\n<ng-template #poImage let-field>\n  <po-image [p-alt]=\"field.alt\" [p-height]=\"field.height\" [p-src]=\"field.value\"> </po-image>\n</ng-template>\n" }]
    }], function () { return [{ type: i1.CurrencyPipe }, { type: i1.DatePipe }, { type: i1.DecimalPipe }, { type: i2.PoTimePipe }, { type: i1.TitleCasePipe }, { type: i3.PoDynamicViewService }]; }, null); })();
//# sourceMappingURL=data:application/json;base64,